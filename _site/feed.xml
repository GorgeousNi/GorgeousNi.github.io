<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-11-06T21:26:34+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">泥</title><subtitle>Java、Spring、Nginx、Centos、Oracle、Mysql</subtitle><author><name>true</name></author><entry><title type="html">Mysql User</title><link href="http://localhost:4000/2018/11/06/mysql-user.html" rel="alternate" type="text/html" title="Mysql User" /><published>2018-11-06T00:00:00+08:00</published><updated>2018-11-06T00:00:00+08:00</updated><id>http://localhost:4000/2018/11/06/mysql-user</id><content type="html" xml:base="http://localhost:4000/2018/11/06/mysql-user.html">&lt;hr /&gt;
&lt;p&gt;layout: post
title: ‘Hello Mysql’
date: 2018-11-05
author: GorgeousNi
color: RGB(238,148,32)
cover: ‘/assets/doc_img/mysql.jpg’
tags: Mysql
—&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Transform your plain text into static websites and blogs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;mysql添加新用户为用户创建数据库为新用户分配权限&quot;&gt;MySQL添加新用户、为用户创建数据库、为新用户分配权限&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt; 
####一. 创建用户
 &lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CREATE USER 'username'@'host' IDENTIFIED BY 'password’;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####说明：
username：你将创建的用户名
host：指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以从任意远程主机登陆，可以使用通配符%
password：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####例子：
CREATE USER ‘dog’@’localhost’ IDENTIFIED BY ‘123456’;
CREATE USER ‘pig’@’192.168.1.101_’ IDENDIFIED BY ‘123456’;
CREATE USER ‘pig’@’%’ IDENTIFIED BY ‘123456’;
CREATE USER ‘pig’@’%’ IDENTIFIED BY ‘’;
CREATE USER ‘pig’@’%’;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt; 
####二. 授权:
 &lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GRANT privileges ON databasename.tablename TO 'username'@'host'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;#####说明:
privileges：用户的操作权限，如SELECT，INSERT，UPDATE等，如果要授予所的权限则使用ALL
databasename：数据库名
tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用&lt;em&gt;表示，如&lt;/em&gt;.*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####例子:
GRANT SELECT, INSERT ON test.user TO ‘pig’@’%’;
GRANT ALL ON &lt;em&gt;.&lt;/em&gt; TO ‘pig’@’%’;
GRANT ALL ON maindataplus.* TO ‘pig’@’%’;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####注意:
用以上命令授权的用户不能给其它用户授权，如果想让该用户可以授权，用以下命令:
GRANT privileges ON databasename.tablename TO ‘username’@’host’ WITH GRANT OPTION;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt; 
####三.设置与更改用户密码
 &lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SET PASSWORD FOR 'username'@'host' = PASSWORD('newpassword');
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;如果是当前登陆用户用: SET PASSWORD = PASSWORD(“newpassword”);
例子：
 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET PASSWORD FOR 'pig'@'%' = PASSWORD(&quot;123456&quot;);&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt; 
####四. 撤销用户权限
 &lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REVOKE privilege ON databasename.tablename FROM 'username'@'host';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;#####说明:
privilege, databasename, tablename：同授权部分&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####例子:
REVOKE SELECT ON &lt;em&gt;.&lt;/em&gt; FROM ‘pig’@’%’;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####注意:
假如你在给用户’pig’@’%’授权的时候是这样的（或类似的）：GRANT SELECT ON test.user TO ‘pig’@’%’，则在使用REVOKE SELECT ON &lt;em&gt;.&lt;/em&gt; FROM ‘pig’@’%’;命令并不能撤销该用户对test数据库中user表的SELECT 操作。相反，如果授权使用的是GRANT SELECT ON &lt;em&gt;.&lt;/em&gt; TO ‘pig’@’%’;则REVOKE SELECT ON test.user FROM ‘pig’@’%’;命令也不能撤销该用户对test数据库中user表的Select权限。
具体信息可以用命令SHOW GRANTS FOR ‘pig’@’%’; 查看。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt; 
####五.删除用户
 &lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DROP USER 'username'@'host';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;drop user &quot;gerrit&quot;@&quot;localhost&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;####&lt;code class=&quot;highlighter-rouge&quot;&gt;注：我的使用的mysql版本：5.7.21&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt; 
####六.实际操作
 &lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;#####5.1 新建用户&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create user 'yd2018'@'localhost' identified by 'ss&amp;amp;sss#2';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create user 'yd2018'@'%' identified by 'ss&amp;amp;sss#2';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flush privileges;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####5.2 创建数据库&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create database test01 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####5.3 授权
说明: privileges - 用户的操作权限,如SELECT , INSERT , UPDATE 等。如果要授予所的权限则使用 ALL;
databasename - 数据库名,tablename-表名,如果要授予该用户对所有数据库和表的相应操作权限则可用&lt;em&gt;表示, 如&lt;/em&gt;.*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;**给该用户授予操作该数据库的全部权限 **
&lt;code class=&quot;highlighter-rouge&quot;&gt;grant all privileges on `test01`.* to 'yd2018'@'%' identified by 'Jiasajskas#2’;&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;**可查询 MySQL 中所有数据库中的表 **
&lt;code class=&quot;highlighter-rouge&quot;&gt;grant select on *.* to yd2018@localhost ...;&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;**可管理 MySQL 中的所有数据库 **
&lt;code class=&quot;highlighter-rouge&quot;&gt;grant all on *.* to yd2018@localhost …;&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT ALL PRIVILEGES ON *.* TO yd2018@localhost IDENTIFIED BY PASSWORD 'jiasasjs18’;&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT ALL PRIVILEGES ON *.* TO yd2018@'%' IDENTIFIED BY PASSWORD 'jiasasjs18’;&lt;/code&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####5.4 查看其他 MySQL 用户权限：&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;show grants for yd2018 @localhost;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#####5.5 查看MYSQL数据库中所有用户&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT DISTINCT CONCAT('User: ''',user,'''@''',host,''';') AS query FROM mysql.user;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;&lt;br /&gt;
#####七.阿里云默认安装mysql root密码更改或者root密码忘记
&lt;br /&gt;
参考 https://www.cnblogs.com/hgj123/p/5279471.html 我就不整理了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
其中修改root密码命令如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;update mysql.user set authentication_string=password('Jx47My2018RO#1') where user='root' and Host = 'localhost’;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;八mysql表名不区分大小写的设置方法&quot;&gt;八.MySQL表名不区分大小写的设置方法&lt;/h5&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;在用centox安装mysql后，把项目的数据库移植了过去，发现一些表的数据查不到，排查了一下问题，最后发现是表名的大小写不一致造成的。
mysql在windows系统下安装好后，默认是对表名大小写不敏感的，但是在linux下，一些系统需要手动设置。
用root登录，打开并修改 /etc/my.cnf；在[mysqld]节点下，加入一行：&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lower_case_table_names=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;重启mysql服务&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service mysqld restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;参考链接：
https://blog.csdn.net/wushuchu/article/details/80529254&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>true</name></author><summary type="html">layout: post title: ‘Hello Mysql’ date: 2018-11-05 author: GorgeousNi color: RGB(238,148,32) cover: ‘/assets/doc_img/mysql.jpg’ tags: Mysql — Transform your plain text into static websites and blogs. MySQL添加新用户、为用户创建数据库、为新用户分配权限 ####一. 创建用户 CREATE USER 'username'@'host' IDENTIFIED BY 'password’; #####说明： username：你将创建的用户名 host：指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以从任意远程主机登陆，可以使用通配符% password：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器 #####例子： CREATE USER ‘dog’@’localhost’ IDENTIFIED BY ‘123456’; CREATE USER ‘pig’@’192.168.1.101_’ IDENDIFIED BY ‘123456’; CREATE USER ‘pig’@’%’ IDENTIFIED BY ‘123456’; CREATE USER ‘pig’@’%’ IDENTIFIED BY ‘’; CREATE USER ‘pig’@’%’; ####二. 授权: GRANT privileges ON databasename.tablename TO 'username'@'host' #####说明: privileges：用户的操作权限，如SELECT，INSERT，UPDATE等，如果要授予所的权限则使用ALL databasename：数据库名 tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用表示，如.* #####例子: GRANT SELECT, INSERT ON test.user TO ‘pig’@’%’; GRANT ALL ON . TO ‘pig’@’%’; GRANT ALL ON maindataplus.* TO ‘pig’@’%’; #####注意: 用以上命令授权的用户不能给其它用户授权，如果想让该用户可以授权，用以下命令: GRANT privileges ON databasename.tablename TO ‘username’@’host’ WITH GRANT OPTION; ####三.设置与更改用户密码 SET PASSWORD FOR 'username'@'host' = PASSWORD('newpassword'); 如果是当前登陆用户用: SET PASSWORD = PASSWORD(“newpassword”); 例子： SET PASSWORD FOR 'pig'@'%' = PASSWORD(&quot;123456&quot;); ####四. 撤销用户权限 REVOKE privilege ON databasename.tablename FROM 'username'@'host'; #####说明: privilege, databasename, tablename：同授权部分 #####例子: REVOKE SELECT ON . FROM ‘pig’@’%’; #####注意: 假如你在给用户’pig’@’%’授权的时候是这样的（或类似的）：GRANT SELECT ON test.user TO ‘pig’@’%’，则在使用REVOKE SELECT ON . FROM ‘pig’@’%’;命令并不能撤销该用户对test数据库中user表的SELECT 操作。相反，如果授权使用的是GRANT SELECT ON . TO ‘pig’@’%’;则REVOKE SELECT ON test.user FROM ‘pig’@’%’;命令也不能撤销该用户对test数据库中user表的Select权限。 具体信息可以用命令SHOW GRANTS FOR ‘pig’@’%’; 查看。 ####五.删除用户 DROP USER 'username'@'host'; 或者 drop user &quot;gerrit&quot;@&quot;localhost&quot;; ####注：我的使用的mysql版本：5.7.21 ####六.实际操作 mysql -u root -p #####5.1 新建用户 create user 'yd2018'@'localhost' identified by 'ss&amp;amp;sss#2'; create user 'yd2018'@'%' identified by 'ss&amp;amp;sss#2'; flush privileges; #####5.2 创建数据库 create database test01 DEFAULT CHARSET utf8 COLLATE utf8_general_ci; #####5.3 授权 说明: privileges - 用户的操作权限,如SELECT , INSERT , UPDATE 等。如果要授予所的权限则使用 ALL; databasename - 数据库名,tablename-表名,如果要授予该用户对所有数据库和表的相应操作权限则可用表示, 如.* **给该用户授予操作该数据库的全部权限 ** grant all privileges on `test01`.* to 'yd2018'@'%' identified by 'Jiasajskas#2’; **可查询 MySQL 中所有数据库中的表 ** grant select on *.* to yd2018@localhost ...; **可管理 MySQL 中的所有数据库 ** grant all on *.* to yd2018@localhost …; GRANT ALL PRIVILEGES ON *.* TO yd2018@localhost IDENTIFIED BY PASSWORD 'jiasasjs18’; GRANT ALL PRIVILEGES ON *.* TO yd2018@'%' IDENTIFIED BY PASSWORD 'jiasasjs18’; #####5.4 查看其他 MySQL 用户权限： show grants for yd2018 @localhost; #####5.5 查看MYSQL数据库中所有用户 SELECT DISTINCT CONCAT('User: ''',user,'''@''',host,''';') AS query FROM mysql.user; #####七.阿里云默认安装mysql root密码更改或者root密码忘记 参考 https://www.cnblogs.com/hgj123/p/5279471.html 我就不整理了 其中修改root密码命令如下： update mysql.user set authentication_string=password('Jx47My2018RO#1') where user='root' and Host = 'localhost’; 八.MySQL表名不区分大小写的设置方法 在用centox安装mysql后，把项目的数据库移植了过去，发现一些表的数据查不到，排查了一下问题，最后发现是表名的大小写不一致造成的。 mysql在windows系统下安装好后，默认是对表名大小写不敏感的，但是在linux下，一些系统需要手动设置。 用root登录，打开并修改 /etc/my.cnf；在[mysqld]节点下，加入一行： lower_case_table_names=1 重启mysql服务 service mysqld restart 参考链接： https://blog.csdn.net/wushuchu/article/details/80529254</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/2018/05/17/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-05-17T14:05:21+08:00</published><updated>2018-05-17T14:05:21+08:00</updated><id>http://localhost:4000/2018/05/17/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/2018/05/17/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>true</name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>